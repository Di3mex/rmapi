#!/bin/bash 
#
# convert a .lines file given as the argument to an (annotated) pdf
# file.  If an associated PDF file exist, the lines contents will be
# overlayed onto that document.  if it doesn't, the lines contents
# will be converted to PDF and possibly overlaid on the appropriate
# background templates.
#
# This script relies on the following packages (on Debian):
#
# librsvg2-bin
# pdftk
# poppler-utils (for pdfunite)
# texlive-extra-utils (for pdf270)
#
# as well as rM2svg (modified by me: ask for copy).
#
# Copyright Â© 2018, Eric S Fraga, e.fraga@ucl.ac.uk
# $Id: rmannotated.sh,v 1.12 2018/10/07 15:19:09 ucecesf Exp $
# Log at the end of this file.
#
# check for arguments but only use first
if [ $# -lt 1 ]; then
    echo "Annotate the PDF document with information from lines file given"
    echo "usage: $(basename $0) lines-file"
    exit 1
fi

# where are the templates?
lines="f223f95f-ed2c-4a2d-87f6-928f7fd6cea9"
echo Processing ${lines}
base="f223f95f-ed2c-4a2d-87f6-928f7fd6cea9"
doc="${base}.pdf"

cd ${lines}

if [ -f ${doc} ]
then
    echo ... with corresponding PDF file ${doc}
    usetemplates="no"
    # figure out desired size of SVG image
    width=$(pdfinfo ${doc} | grep 'Page size:' | awk '{print $3}')
    height=$(pdfinfo ${doc} | grep 'Page size:' | awk '{print $5}')
    echo "width is $width and height is $height"
    # comparing floating point numbers in bash directly is not possible
    if (( $(echo "$height > $width" | bc -l) ))
    then
        rotated="no"
    else
        echo 'PDF file is rotated'
        rotated="yes"
        swap=$width
        width=$height
        height=$swap
    fi
else
    echo ${doc} does not exist so direct conversion of lines file
    rotate="no"
    width=1404
    height=1872
    usetemplates="yes"
    # read in the templates used by each page in the notebook
    readarray -t templates < ${base}.pagedata
fi
echo Geometry is ${width} by ${height}

../rM2svg -c -i "${lines}" --width ${width} --height ${height} -o ""


# in case there are more than 100 pages, convert names for pages < 100
# to 3 digit page numbers by prefixing with 0
# for svg in *_[0-9][0-9].svg
# do
#     j=$(echo $svg | sed -e 's/_/_0/')
#     mv $svg $j
# done
page=0

for svg in *.svg 
do
    p=$(basename $svg .svg)

    if [ "$usetemplates" == "yes" ]
    then
        # echo Looking for template
        #template=$(head --lines=${counter} ${base}.pagedata | tail -1)
        # echo Page ${page} template is ${templates[$page]}
        composite "${templatesdir}/${templates[$page]}.png" ${svg} ${svg}
        page=$((page+1))
    fi
    rsvg-convert -f pdf -o ${base}_$p.pdf $p.svg
    # rm ${svg}
    if [ "$rotated" == "yes" ]
    then
        pdf270 $p.pdf 2>/dev/null
        mv $p-rotated270.pdf $p.pdf
    fi
done


pdfunite ${base}_*.pdf ${base}_annotations.pdf
if [ -f ${doc} ]; then
    pdftk ${doc} multistamp ${base}_annotations.pdf output annotated_${base}.pdf
else
    mv ${base}_annotations.pdf annotated_${base}.pdf
fi


rm ${base}_*.pdf
echo "Resulting annotated file: annotated_${base}.pdf"
